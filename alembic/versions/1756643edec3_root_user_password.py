"""'root user password'

Revision ID: 1756643edec3
Revises: 5d04ad429a57
Create Date: 2025-08-29 12:45:54.660955

"""
import secrets
import string
from typing import Sequence, Union

from alembic import op, context
import sqlalchemy as sa
from sqlalchemy.sql import table

from src.domain.entities.user import User


# revision identifiers, used by Alembic.
revision: str = '1756643edec3'
down_revision: Union[str, None] = '5d04ad429a57'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def _generate_password():
    alphabet = string.ascii_letters + string.digits
    password = "".join(secrets.choice(alphabet) for _ in range(16))

    logger = context.get_context().impl.get_bind().engine.logger
    logger.info(f"- New password for root user: {password}")
    return password


def _change_user_password(password: str) -> None:
    user_table = table(
        'users',
        sa.column('email', sa.String),
        sa.column('password', sa.String)
    )

    user = User("John", "johndoe@example.com", password)
    op.execute(
        user_table.update()
        .where(user_table.c.email == "johndoe@example.com")
        .values(password=user._password)
    )


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    new_password = _generate_password()
    _change_user_password(new_password)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    old_password = "mysecretpassword"
    _change_user_password(old_password)
    # ### end Alembic commands ###
