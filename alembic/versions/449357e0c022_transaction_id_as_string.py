"""'transaction_id_as_string'

Revision ID: 449357e0c022
Revises: 313a5c223435
Create Date: 2025-07-09 09:51:58.763878

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '449357e0c022'
down_revision: Union[str, None] = '313a5c223435'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Rename the old column to transaction_id_uuid
    op.alter_column('catalog_transactions', 'transaction_id',
                    new_column_name='transaction_id_uuid')
    op.alter_column('mapping_transactions', 'transaction_id',
                    new_column_name='transaction_id_uuid')

    # Create the new transaction_id column as UUID
    op.add_column('catalog_transactions', sa.Column(
        'transaction_id', sa.String(), nullable=True))
    op.add_column('mapping_transactions', sa.Column(
        'transaction_id', sa.String(), nullable=True))

    # Copy and convert data from transaction_id_uuid (UUID) to transaction_id (String)
    op.execute("""
        UPDATE catalog_transactions
        SET transaction_id = transaction_id_uuid::text
    """)
    op.execute("""
        UPDATE mapping_transactions
        SET transaction_id = transaction_id_uuid::text
    """)

    # Remove the old column
    op.drop_column('catalog_transactions', 'transaction_id_uuid')
    op.drop_column('mapping_transactions', 'transaction_id_uuid')

    op.alter_column('catalog_transactions', 'transaction_id', nullable=False)
    op.alter_column('mapping_transactions', 'transaction_id', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Rename the old column to transaction_id_str
    op.alter_column('catalog_transactions', 'transaction_id',
                    new_column_name='transaction_id_str')
    op.alter_column('mapping_transactions', 'transaction_id',
                    new_column_name='transaction_id_str')

    # Create the new transaction_id column as String
    op.add_column('catalog_transactions', sa.Column(
        'transaction_id', sa.dialects.postgresql.UUID(), nullable=True))
    op.add_column('mapping_transactions', sa.Column(
        'transaction_id', sa.dialects.postgresql.UUID(), nullable=True))

    # Copy and convert data from transaction_id_str (String) to transaction_id (UUID)
    op.execute("""
        UPDATE catalog_transactions
        SET transaction_id = transaction_id_str::uuid
    """)
    op.execute("""
        UPDATE mapping_transactions
        SET transaction_id = transaction_id_str::uuid
    """)

    # Remove the old column
    op.drop_column('catalog_transactions', 'transaction_id_str')
    op.drop_column('mapping_transactions', 'transaction_id_str')

    op.alter_column('catalog_transactions', 'transaction_id', nullable=False)
    op.alter_column('mapping_transactions', 'transaction_id', nullable=False)
    # ### end Alembic commands ###
